//
//  enum.swift
//  Swift_learning
//
//  Created by Даниил Асташов on 22.10.2024.
//

import Foundation

//Перечисление (enum) — это объектный тип данных, который предоставляет доступ к различным предопределенным значениям. Рассматривайте его как перечень возможных значений, то есть набор констант, значения которых являются
//альтернативами друг другу.
//Рассмотрим хранилище, которое описывает некоторую денежную единицу (листинг 19.1). Для того чтобы решить поставленную задачу с помощью изученных
//ранее типов данных, можно использовать тип String. В этом случае потребуется
//вести учет всех возможных значений для описания денежных единиц

var russianCurrency: String = "Rouble"

//Подобный подход создает проблем больше, чем позволяет решить, поскольку не
//исключает влияния человеческого фактора, из-за которого случайное изменение
//всего лишь одной буквы приведет к тому, что программа не сможет корректно
//обработать поступившее значение. А что делать, если потребуется добавить обработку нового значения денежной единицы?
//Альтернативой этому способу может служить создание коллекции, например
//массива (листинг 19.2). Массив содержит все возможные значения, которые
//доступны в программе. При необходимости происходит получение требуемого
//элемента массива.

let currencyUnit: [String] = ["Rouble", "Euro"]
let euroCurrency = currencyUnit[1]


//Перечисление — это тип данных, содержащий множество альтернативных значений,
//каждое из которых может быть проинициализировано некоторому параметру


enum CurrencyUnit {
 case rouble
 case euro
}

enum CurrencyUnit_new {
 case rouble, euro
}
